scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "GC Content vs Proportion of Amino Acids",
x = "GC Content",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "lightblue", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras et noir
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))  # Lignes de grille mineures
# Graphique pour AU Content avec grille et profils séparés
ggplot(combined_data) +
geom_point(aes(x = AU_content, y = Proportion, color = AU_content, size = Proportion),
alpha = 0.7) +  # Gradient de couleur pour AU content et taille pour la proportion d'AA
scale_color_gradient(low = "#ffede0", high = "#d73027") +  # Gradient de rouge pour AU content
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "AU Content vs Proportion of Amino Acids",
x = "AU Content",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "lightcoral", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras et noir
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))  # Lignes de grille mineures
# Graphique pour GC Content avec grille et profils séparés
ggplot(combined_data) +
geom_point(aes(x = GC_content, y = Proportion, color = GC_content, size = Proportion),
alpha = 0.7) +  # Gradient de couleur pour GC content et taille pour la proportion d'AA
scale_color_gradient(low = "#f7fbff", high = "#08306b") +  # Gradient de bleu pour GC content
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "GC vs Amino Acids Proportion",
x = "GC Proportion",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "lightblue", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras et noir
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))  # Lignes de grille mineures
# Graphique pour AU Content avec grille et profils séparés
ggplot(combined_data) +
geom_point(aes(x = AU_content, y = Proportion, color = AU_content, size = Proportion),
alpha = 0.7) +  # Gradient de couleur pour AU content et taille pour la proportion d'AA
scale_color_gradient(low = "#ffede0", high = "#d73027") +  # Gradient de rouge pour AU content
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "AU vs Amino Acids Proportion",
x = "AU Proportion",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "lightcoral", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras et noir
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))  # Lignes de grille mineures
# Graphique combiné avec un gradient de bleu à rouge
ggplot(combined_data_long) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#f7fbff", high = "#d73027") +  # Gradient de bleu à rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
combined_data_long <- combined_data %>%
pivot_longer(cols = c(GC_content, AU_content),
names_to = "Content_Type",
values_to = "Content")
# Graphique combiné avec un gradient de bleu à rouge
ggplot(combined_data_long) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#f7fbff", high = "#d73027") +  # Gradient de bleu à rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggplot(combined_data_long) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient2(low = "#0000FF", mid = "#FFFFFF", high = "#FF0000") +  # Gradient de bleu à rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))  # Lignes de grille mineures
ggplot(combined_data_long) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient de bleu à rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))  # Lignes de grille mineures
ggplot(combined_data_long) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient du bleu au rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids",
color = "Content Value") +  # Légende pour le gradient de couleur
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "right",  # Position de la légende
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggplot(combined_data) +
geom_point(aes(x = GC_content, y = Proportion, color = GC_content, size = Proportion),
alpha = 0.7) +  # Gradient de couleur pour GC content et taille pour la proportion d'AA
scale_color_gradient(low = "#f7fbff", high = "#08306b") +  # Gradient de bleu pour GC content
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "GC vs Amino Acids Proportion",
x = "GC Proportion",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none")
ggplot(combined_data, aes(x = Length, y = Proportion, fill = Type)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "AA Distribution by Sequence Length and Profile",
y = "Proportion (Mean)", x = "Sequence Length") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
combined_data_long <- combined_data %>%
pivot_longer(cols = c(GC_content, AU_content),
names_to = "Content_Type",
values_to = "Content")
ggplot(combined_data_long) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient du bleu au rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids",
color = "Content Value") +  # Légende pour le gradient de couleur
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "right",  # Position de la légende
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggplot(combined_data %>% filter(Profile %in% c("GC-favored (high)", "Balanced", "AU-favored (high)"))) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient du bleu au rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids",
color = "Content Value") +  # Légende pour le gradient de couleur
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "right",  # Position de la légende
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
data <- combined_data %>% filter(Profile %in% c("GC-favored (high)", "Balanced", "AU-favored (high)"))
ggplot(data) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient du bleu au rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids",
color = "Content Value") +  # Légende pour le gradient de couleur
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "right",  # Position de la légende
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
combined_data <- dplyr::bind_rows(all_data) %>%
pivot_longer(cols = c(GC_content, AU_content),
names_to = "Content_Type",
values_to = "Content")
data <- combined_data %>% filter(Profile %in% c("GC-favored (high)", "Balanced", "AU-favored (high)"))
ggplot(data) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient du bleu au rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids",
color = "Content Value") +  # Légende pour le gradient de couleur
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "right",  # Position de la légende
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggplot(combined_data) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient du bleu au rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids",
color = "Content Value") +  # Légende pour le gradient de couleur
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "right",  # Position de la légende
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
#Reorganize profiles display
combined_data$Profile <- factor(combined_data$Profile,
levels = c("GC-favored (high)",
"GC-favored (light)",
"Balanced",
"AU-favored (light)",
"AU-favored (high)"))
ggplot(combined_data) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient du bleu au rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids",
color = "Content Value") +  # Légende pour le gradient de couleur
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "right",  # Position de la légende
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
data <-
ggplot(combined_data %>% filter(Profile %in% c("GC-favored (high)", "Balanced", "AU-favored (high)"))) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient du bleu au rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids",
color = "Content Value") +  # Légende pour le gradient de couleur
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "right",  # Position de la légende
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
data <-
ggplot(combined_data %>% filter(Profile %in% c("GC-favored (high)", "Balanced", "AU-favored (high)"))) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient du bleu au rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids",
color = "Content Value") +  # Légende pour le gradient de couleur
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "right",  # Position de la légende
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
data <- combined_data %>% filter(Profile %in% c("GC-favored (high)", "Balanced", "AU-favored (high)"))
ggplot(data) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient du bleu au rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids",
color = "Content Value") +  # Légende pour le gradient de couleur
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "right",  # Position de la légende
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggplot(combined) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient du bleu au rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids",
color = "Content Value") +  # Légende pour le gradient de couleur
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "right",  # Position de la légende
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggplot(combined_data) +
geom_point(aes(x = Content, y = Proportion, color = Content, size = Proportion), alpha = 0.7) +  # Gradient de couleur pour content
scale_color_gradient(low = "#0000FF", high = "#FF0000") +  # Gradient du bleu au rouge
scale_size_continuous(range = c(2, 6)) +  # Taille des points en fonction de la proportion d'AA
facet_wrap(~ Profile, ncol = 5) +  # Séparation des profils
theme_minimal() +
labs(title = "Content (GC & AU) vs Proportion of Amino Acids",
x = "Content",
y = "Proportion of Amino Acids",
color = "Content Value") +  # Légende pour le gradient de couleur
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "right",  # Position de la légende
strip.background = element_rect(fill = "lightgrey", color = "black", size = 1),  # Fond coloré pour les profils
strip.text = element_text(face = "bold", color = "black"),  # Texte en gras pour les titres des profils
panel.grid.major = element_line(color = "gray", size = 0.5),  # Lignes de grille majeures
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggplot(combined_data) +
geom_point(aes(x = GC_content, y = Proportion, color = GC_content, size = Proportion),
alpha = 0.7) +
scale_color_gradient(low = "#f7fbff", high = "#08306b") +
scale_size_continuous(range = c(2, 6)) +
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "GC vs Amino Acids Proportion",
x = "GC Proportion",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "lightblue", color = "black", size = 1),
strip.text = element_text(face = "bold", color = "black"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
combined_data <- dplyr::bind_rows(all_data) %>%
pivot_longer(cols = c(GC_content, AU_content),
names_to = "Content_Type",
values_to = "Content")
#Reorganize profiles display
combined_data$Profile <- factor(combined_data$Profile,
levels = c("GC-favored (high)",
"GC-favored (light)",
"Balanced",
"AU-favored (light)",
"AU-favored (high)"))
View(combined_data)
combined_data <- dplyr::bind_rows(all_data)
ggplot(combined_data) +
geom_point(aes(x = GC_content, y = Proportion, color = GC_content, size = Proportion),
alpha = 0.7) +
scale_color_gradient(low = "#f7fbff", high = "#08306b") +
scale_size_continuous(range = c(2, 6)) +
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "GC vs Amino Acids Proportion",
x = "GC Proportion",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "lightblue", color = "black", size = 1),
strip.text = element_text(face = "bold", color = "black"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggplot(combined_data) +
geom_point(aes(x = AU_content, y = Proportion, color = AU_content, size = Proportion),
alpha = 0.7) +
scale_color_gradient(low = "#ffede0", high = "#d73027") +
scale_size_continuous(range = c(2, 6)) +
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "AU vs Amino Acids Proportion",
x = "AU Proportion",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none",
strip.background = element_rect(fill = "lightcoral", color = "black", size = 1),
strip.text = element_text(face = "bold", color = "black"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggplot(combined_data) +
geom_point(aes(x = GC_content, y = Proportion, color = GC_content, size = Proportion),
alpha = 0.7) +
scale_color_gradient(low = "#f7fbff", high = "#08306b") +
scale_size_continuous(range = c(2, 6)) +
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "GC vs Amino Acids Proportion",
x = "GC Proportion",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "bottom",
strip.background = element_rect(fill = "lightblue", color = "black", size = 1),
strip.text = element_text(face = "bold", color = "black"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
#Reorganize profiles display
combined_data$Profile <- factor(combined_data$Profile,
levels = c("GC-favored (high)",
"GC-favored (light)",
"Balanced",
"AU-favored (light)",
"AU-favored (high)"))
ggplot(combined_data) +
geom_point(aes(x = GC_content, y = Proportion, color = GC_content, size = Proportion),
alpha = 0.7) +
scale_color_gradient(low = "#f7fbff", high = "#08306b") +
scale_size_continuous(range = c(2, 6)) +
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "GC vs Amino Acids Proportion",
x = "GC Proportion",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "bottom",
strip.background = element_rect(fill = "lightblue", color = "black", size = 1),
strip.text = element_text(face = "bold", color = "black"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggplot(combined_data) +
geom_point(aes(x = GC_content, y = Proportion, color = GC_content, size = Proportion),
alpha = 0.7) +
scale_color_gradient(low = "#f7fbff", high = "#08306b") +
scale_size_continuous(range = c(2, 6)) +
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "GC vs Amino Acids Proportion",
x = "GC Proportion",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "bottom",
strip.background = element_rect(fill = "lightblue", color = "black", size = 1),
strip.text = element_text(face = "bold", color = "black"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggsave("GCvsAAproportion.jpeg", plot = p, width = 8, height = 6)
ggplot(combined_data) +
geom_point(aes(x = GC_content, y = Proportion, color = GC_content, size = Proportion),
alpha = 0.7) +
scale_color_gradient(low = "#f7fbff", high = "#08306b") +
scale_size_continuous(range = c(2, 6)) +
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "GC vs Amino Acids Proportion",
x = "GC Proportion",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "bottom",
strip.background = element_rect(fill = "lightblue", color = "black", size = 1),
strip.text = element_text(face = "bold", color = "black"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggsave("GCvsAAproportion.jpeg", plot = last_plot(), width = 8, height = 6)
ggplot(combined_data) +
geom_point(aes(x = AU_content, y = Proportion, color = AU_content, size = Proportion),
alpha = 0.7) +
scale_color_gradient(low = "#ffede0", high = "#d73027") +
scale_size_continuous(range = c(2, 6)) +
facet_wrap(~ Profile, ncol = 5) +
theme_minimal() +
labs(title = "AU vs Amino Acids Proportion",
x = "AU Proportion",
y = "Proportion of Amino Acids") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "bottom",
strip.background = element_rect(fill = "lightcoral", color = "black", size = 1),
strip.text = element_text(face = "bold", color = "black"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25))
ggsave("AUvsAAproportion.jpeg", plot = last_plot(), width = 8, height = 6)
PK
